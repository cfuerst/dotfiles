# !/bin/zsh

#svn util functions

#detect if there is a svn directory
function is_svn() {
    if [[ -d .svn ]]; then
        return 0
    fi
    return 1
}

#colorsetup
SVN_PROMPT_PREFIX="%{$fg[green]%}[%{$reset_color%}"
SVN_PROMPT_SUFFIX="%{$fg[green]%}]%{$reset_color%}"
SVN_PROMPT_DIRTY="%{$fg[red]%}✗%{$reset_color%}"
SVN_PROMPT_CLEAN="%{$fg[green]%}✓%{$reset_color%}"

#get the branch name
function get_svn_branch_name() {
    name=$(svn info 2> /dev/null | awk -F/ '/^URL:/ { for (i=0; i<=NF; i++) { if ($i == "branches" || $i == "tags" ) { print $(i+1); break }; if ($i == "trunk") { print $i; break } } }')
    echo "$SVN_PROMPT_PREFIX${name}$SVN_PROMPT_SUFFIX"
}

#get the revision name
function get_svn_rev_nr() {
    echo "$SVN_PROMPT_PREFIX$(svn info 2> /dev/null | sed -n s/Revision:\ //p)$SVN_PROMPT_SUFFIX"
}

#check if repository is dirty by its change counts
function get_svn_is_dirty() {
    change_count=`svn status | grep "?\|\!\|M\|A" | wc -l | tr -d " "`
    if [ $change_count -eq "0" ]; then
        echo "$SVN_PROMPT_PREFIX$SVN_PROMPT_CLEAN$SVN_PROMPT_SUFFIX"
    else
        echo "$SVN_PROMPT_PREFIX$SVN_PROMPT_DIRTY$SVN_PROMPT_SUFFIX"
    fi
}

#get the svn root url and extract the last part of the string
#assuming that this is the project name
function get_svn_projectname(){
    string=$(svn info --xml 2>/dev/null | grep "<root>" | sed 's/<[^>]*>//g')
    echo "$SVN_PROMPT_PREFIX$(basename $string)$SVN_PROMPT_SUFFIX"
}

#status for prompt
function get_svn_status(){
    echo "$(get_svn_is_dirty)$(get_svn_projectname)$(get_svn_branch_name)$(get_svn_rev_nr)"
}